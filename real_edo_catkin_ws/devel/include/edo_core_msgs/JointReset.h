// Generated by gencpp from file edo_core_msgs/JointReset.msg
// DO NOT EDIT!


#ifndef EDO_CORE_MSGS_MESSAGE_JOINTRESET_H
#define EDO_CORE_MSGS_MESSAGE_JOINTRESET_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace edo_core_msgs
{
template <class ContainerAllocator>
struct JointReset_
{
  typedef JointReset_<ContainerAllocator> Type;

  JointReset_()
    : joints_mask(0)
    , disengage_steps(0)
    , disengage_offset(0.0)  {
    }
  JointReset_(const ContainerAllocator& _alloc)
    : joints_mask(0)
    , disengage_steps(0)
    , disengage_offset(0.0)  {
  (void)_alloc;
    }



   typedef uint64_t _joints_mask_type;
  _joints_mask_type joints_mask;

   typedef uint32_t _disengage_steps_type;
  _disengage_steps_type disengage_steps;

   typedef float _disengage_offset_type;
  _disengage_offset_type disengage_offset;





  typedef boost::shared_ptr< ::edo_core_msgs::JointReset_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::edo_core_msgs::JointReset_<ContainerAllocator> const> ConstPtr;

}; // struct JointReset_

typedef ::edo_core_msgs::JointReset_<std::allocator<void> > JointReset;

typedef boost::shared_ptr< ::edo_core_msgs::JointReset > JointResetPtr;
typedef boost::shared_ptr< ::edo_core_msgs::JointReset const> JointResetConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::edo_core_msgs::JointReset_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::edo_core_msgs::JointReset_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::edo_core_msgs::JointReset_<ContainerAllocator1> & lhs, const ::edo_core_msgs::JointReset_<ContainerAllocator2> & rhs)
{
  return lhs.joints_mask == rhs.joints_mask &&
    lhs.disengage_steps == rhs.disengage_steps &&
    lhs.disengage_offset == rhs.disengage_offset;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::edo_core_msgs::JointReset_<ContainerAllocator1> & lhs, const ::edo_core_msgs::JointReset_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace edo_core_msgs

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsMessage< ::edo_core_msgs::JointReset_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::edo_core_msgs::JointReset_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::edo_core_msgs::JointReset_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::edo_core_msgs::JointReset_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::edo_core_msgs::JointReset_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::edo_core_msgs::JointReset_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::edo_core_msgs::JointReset_<ContainerAllocator> >
{
  static const char* value()
  {
    return "a9a93ce1fc39c419654c782e78ed4d90";
  }

  static const char* value(const ::edo_core_msgs::JointReset_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xa9a93ce1fc39c419ULL;
  static const uint64_t static_value2 = 0x654c782e78ed4d90ULL;
};

template<class ContainerAllocator>
struct DataType< ::edo_core_msgs::JointReset_<ContainerAllocator> >
{
  static const char* value()
  {
    return "edo_core_msgs/JointReset";
  }

  static const char* value(const ::edo_core_msgs::JointReset_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::edo_core_msgs::JointReset_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint64 joints_mask\n"
"uint32 disengage_steps\n"
"float32 disengage_offset\n"
;
  }

  static const char* value(const ::edo_core_msgs::JointReset_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::edo_core_msgs::JointReset_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.joints_mask);
      stream.next(m.disengage_steps);
      stream.next(m.disengage_offset);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct JointReset_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::edo_core_msgs::JointReset_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::edo_core_msgs::JointReset_<ContainerAllocator>& v)
  {
    s << indent << "joints_mask: ";
    Printer<uint64_t>::stream(s, indent + "  ", v.joints_mask);
    s << indent << "disengage_steps: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.disengage_steps);
    s << indent << "disengage_offset: ";
    Printer<float>::stream(s, indent + "  ", v.disengage_offset);
  }
};

} // namespace message_operations
} // namespace ros

#endif // EDO_CORE_MSGS_MESSAGE_JOINTRESET_H
